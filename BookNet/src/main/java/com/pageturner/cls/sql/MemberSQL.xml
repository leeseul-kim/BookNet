<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
			PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
					"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
					
<mapper namespace="mSQL">
	<sql id="selIdCNT">
		SELECT
			count(*) cnt
		FROM
			membertab
		WHERE
			id = 
	</sql>
	
	<!-- 로그인처리를 위한 sql 질의명령 -->
	<select id="Login" resultType="int" parameterType="mVO">
		<include refid="selIdCNT" /> #{id}
			AND pw = #{pw}
			AND ISSHOW = 'Y'
	</select>
	
	<!-- 회원정보 조회 -->
	<select id="selUser" resultType="mVO" parameterType="String">
		select
			*
		from
			membertab
		where
			id = #{id}
	</select>
	
	<!-- 장르 조회 -->
	<select id="genre" resultType="pVO">
		select
			genre, substr(gname, 6) gname
		from
			genretab
		where
			substr(gname, 6) is not null
	</select>
	
	<!-- 정보수정(pw) -->
	<update id="editPW" parameterType="mVO">
		update
			membertab
		set
			pw = #{pw}
		where
			id = #{id}
	</update>
	
	<!-- 정보수정 -->
	<update id="editUser" parameterType="mVO">
		update
			membertab
		<trim prefix="SET">
			<if test="interest neq null">
			interest = #{interest},
			</if>
			<if test="interest eq null">
			interest = null,
			</if>
			<if test="true">
			describe = #{describe},
			intershow = #{intershow},
			birthshow = #{birthshow},
			genshow = #{genshow}
			</if>
		</trim>
		where
			id = #{id}
	</update>
	
	<!-- 정보수정(프사추가) -->
	<insert id="insertProfile" parameterType="fVO">
		insert into
			profilepictab(pf_pt_no, mno, ori_name, save_name)
		values(
			(select nvl(max(pf_pt_no)+1, 1000) from profilepictab),
			(select mno from membertab where id = #{id}),
			#{ori_name}, #{save_name}
		)
	</insert>
	
	<!-- 프사추가전에 이전 프사들 isshow N 만들기 -->
	<update id="updateProfile" parameterType="fVO">
		update
			profilepictab
		set
			isshow = 'N'
		where
			mno = (select mno from membertab where id = #{id})
	</update>
	
	<!-- 회원탈퇴 -->
	<update id="delUser" parameterType="mVO">
		update
			membertab
		set
			isshow = 'N'
		where
			id = #{id}
	</update>
	
	<!-- 아디비번찾기 -->
	<select id="findID" resultType="String" parameterType="mVO">
		select
			id
		from
			member
		where
			mail = #{mail}
	</select>
	<select id="findPW" resultType="String" parameterType="mVO">
		select
			pw
		from
			member
		where
			id = #{id}
			and mail = #{mail}
	</select>
	<!-- 아이디 중복 확인(우현우)  -->
	<select id="idck" resultType="int" parameterType="mVO">
		<include refid="selIdCNT"/>#{id}	
	</select>
	
	<!-- 회원가입 처리(우현우) -->
	<insert id="join"  parameterType="mVO">
		insert into
			MEMBERTAB(mno, id, pw, name, mail, gen, birthdate, JOINDATE, interest,  describe)
		VALUES(
			(SELECT 
				NVL(MAX(MNO) + 1, 1000)
			FROM
				MEMBERTAB),#{id}, #{pw}, #{name}, #{mail}, #{gen}, #{birthdate}, SYSDATE, #{interest} ,#{describe}
		)	
	</insert>
	
	<!-- 이메일 중복 가입 방지 처리(우현우) -->
	<select id="mailck" parameterType="mVO">
		SELECT 
			count(mail) cnt
		FROM
			MEMBERTAB
		WHERE
			mail = #{mail}
	</select>
</mapper>					